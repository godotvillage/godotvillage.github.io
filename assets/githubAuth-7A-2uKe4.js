import{baseUrl as i}from"./request-CXO8pog0.js";class c{constructor(){this.clientId="Ov23lijKGj89a9GItFXq",this.redirectUri=window.location.href,this.storageKey="github_user",this.tokenKey="github_token"}getCurrentUser(){try{const t=localStorage.getItem(this.storageKey);return t?JSON.parse(t):null}catch(t){return console.error("获取用户信息失败:",t),null}}getAccessToken(){return localStorage.getItem(this.tokenKey)}isLoggedIn(){return!!this.getCurrentUser()&&!!this.getAccessToken()}login(){const t=this.generateState();localStorage.setItem("oauth_state",t);const e=new URLSearchParams({client_id:this.clientId,redirect_uri:this.redirectUri,scope:"read:user user:email",state:t,allow_signup:"true"});window.location.href=`https://github.com/login/oauth/authorize?${e.toString()}`}async handleCallback(t,e){try{const r=localStorage.getItem("oauth_state");if(e!==r)throw new Error("Invalid state parameter");localStorage.removeItem("oauth_state");const o=await fetch(i+"/auth/github/callback",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:t})});if(!o.ok)throw new Error("Failed to exchange code for token");const n=await o.json(),{access_token:a}=n.data,s=await this.fetchUserInfo(a);return localStorage.setItem(this.tokenKey,a),localStorage.setItem(this.storageKey,JSON.stringify(s)),s}catch(r){throw console.error("GitHub登录失败:",r),r}}async fetchUserInfo(t){try{const e=await fetch("https://api.github.com/user",{headers:{Authorization:`token ${t}`,Accept:"application/vnd.github.v3+json"}});if(!e.ok)throw new Error("Failed to fetch user info");const r=await e.json();return{id:r.id,login:r.login,name:r.name,email:r.email,avatar_url:r.avatar_url,html_url:r.html_url}}catch(e){throw console.error("获取用户信息失败:",e),e}}logout(){localStorage.removeItem(this.storageKey),localStorage.removeItem(this.tokenKey),localStorage.removeItem("oauth_state")}isProjectAuthor(t,e=null){return e||(e=this.getCurrentUser()),!e||!t?!1:t.githubUser===e.name}generateState(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}mockLogin(t){const e={id:Date.now(),login:t,name:t,email:`${t}@example.com`,avatar_url:`https://github.com/${t}.png`,html_url:`https://github.com/${t}`};return localStorage.setItem(this.storageKey,JSON.stringify(e)),localStorage.setItem(this.tokenKey,"mock_token_"+Date.now()),e}}const g=new c;export{g};
